CCS PCM C Compiler, Version 4.074, 22034               02-Apr-22 09:39

               Filename: week_6.lst

               ROM used: 246 words (3%)
                         Largest free fragment is 2048
               RAM used: 20 (5%) at main() level
                         22 (6%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   060
0003:  NOP
.................... #include "D:\Proteus 8.8\pic16f887\week_6\week_6.h" 
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES RC                    	//Resistor/Capacitor Osc with CLKOUT 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES LVP                   	//Low Voltage Programming on B3(PIC16) or B5(PIC18) 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES BORV40                	//Brownout reset at 4.0V 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  2E
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
.................... unsigned char binary_pattern[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; 
*
0080:  MOVLW  3F
0081:  BCF    03.6
0082:  MOVWF  20
0083:  MOVLW  06
0084:  MOVWF  21
0085:  MOVLW  5B
0086:  MOVWF  22
0087:  MOVLW  4F
0088:  MOVWF  23
0089:  MOVLW  66
008A:  MOVWF  24
008B:  MOVLW  6D
008C:  MOVWF  25
008D:  MOVLW  7D
008E:  MOVWF  26
008F:  MOVLW  07
0090:  MOVWF  27
0091:  MOVLW  7F
0092:  MOVWF  28
0093:  MOVLW  6F
0094:  MOVWF  29
....................  
.................... int i; 
.................... int k; 
.................... #define SHCP_PIN PIN_C0 
.................... #define DS_PIN PIN_C1 
.................... #define STCP_PIN PIN_C2 
.................... void IC_74hc595(unsigned int data)  
.................... { 
....................     OUTPUT_LOW(SHCP_PIN); 
*
0018:  BCF    2C.0
0019:  MOVF   2C,W
001A:  BSF    03.5
001B:  MOVWF  07
001C:  BCF    03.5
001D:  BCF    07.0
....................      
....................     for(k = 0;k < 8; k++) 
001E:  CLRF   2B
001F:  MOVF   2B,W
0020:  SUBLW  07
0021:  BTFSS  03.0
0022:  GOTO   044
....................     { 
....................     if((data & 0x80)==0) 
0023:  MOVF   2E,W
0024:  ANDLW  80
0025:  BTFSS  03.2
0026:  GOTO   02E
....................     OUTPUT_LOW(DS_PIN); 
0027:  BCF    2C.1
0028:  MOVF   2C,W
0029:  BSF    03.5
002A:  MOVWF  07
002B:  BCF    03.5
002C:  BCF    07.1
....................     else 
002D:  GOTO   034
....................     OUTPUT_HIGH(DS_PIN); 
002E:  BCF    2C.1
002F:  MOVF   2C,W
0030:  BSF    03.5
0031:  MOVWF  07
0032:  BCF    03.5
0033:  BSF    07.1
....................     data=data<<1; 
0034:  BCF    03.0
0035:  RLF    2E,F
....................     OUTPUT_HIGH(SHCP_PIN); 
0036:  BCF    2C.0
0037:  MOVF   2C,W
0038:  BSF    03.5
0039:  MOVWF  07
003A:  BCF    03.5
003B:  BSF    07.0
....................     OUTPUT_LOW(SHCP_PIN); 
003C:  BCF    2C.0
003D:  MOVF   2C,W
003E:  BSF    03.5
003F:  MOVWF  07
0040:  BCF    03.5
0041:  BCF    07.0
....................     } 
0042:  INCF   2B,F
0043:  GOTO   01F
.................... } 
0044:  BCF    0A.3
0045:  BCF    0A.4
0046:  GOTO   0EA (RETURN)
.................... void IC_74HC595_Output() 
.................... { 
....................     OUTPUT_LOW(SHCP_PIN); 
0047:  BCF    2C.0
0048:  MOVF   2C,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  BCF    03.5
004C:  BCF    07.0
....................     delay_us(5); 
004D:  MOVLW  08
004E:  MOVWF  77
004F:  DECFSZ 77,F
0050:  GOTO   04F
....................     OUTPUT_HIGH(STCP_PIN); 
0051:  BCF    2C.2
0052:  MOVF   2C,W
0053:  BSF    03.5
0054:  MOVWF  07
0055:  BCF    03.5
0056:  BSF    07.2
....................     OUTPUT_LOW(STCP_PIN); 
0057:  BCF    2C.2
0058:  MOVF   2C,W
0059:  BSF    03.5
005A:  MOVWF  07
005B:  BCF    03.5
005C:  BCF    07.2
.................... } 
005D:  BCF    0A.3
005E:  BCF    0A.4
005F:  GOTO   0EB (RETURN)
.................... void main() 
.................... { 
0060:  CLRF   04
0061:  BCF    03.7
0062:  MOVLW  1F
0063:  ANDWF  03,F
0064:  BSF    03.5
0065:  BSF    03.6
0066:  BSF    07.3
0067:  MOVLW  08
0068:  BCF    03.6
0069:  MOVWF  19
006A:  MOVLW  02
006B:  MOVWF  1A
006C:  MOVLW  A6
006D:  MOVWF  18
006E:  MOVLW  90
006F:  BCF    03.5
0070:  MOVWF  18
0071:  BSF    03.5
0072:  BSF    03.6
0073:  MOVF   09,W
0074:  ANDLW  C0
0075:  MOVWF  09
0076:  BCF    03.6
0077:  BCF    1F.4
0078:  BCF    1F.5
0079:  MOVLW  00
007A:  BSF    03.6
007B:  MOVWF  08
007C:  BCF    03.5
007D:  CLRF   07
007E:  CLRF   08
007F:  CLRF   09
....................    SET_TRIS_B(0x00); 
*
0097:  MOVLW  00
0098:  BSF    03.5
0099:  MOVWF  06
....................    SET_TRIS_C(0x00); 
009A:  MOVWF  07
009B:  BCF    03.5
009C:  MOVWF  2C
....................    SET_TRIS_D(0x00); 
009D:  BSF    03.5
009E:  MOVWF  08
....................    OUTPUT_B(0x00); 
009F:  CLRF   06
00A0:  BCF    03.5
00A1:  CLRF   06
....................    //OUTPUT_C(0x00); 
....................    OUTPUT_D(0x00); 
00A2:  BSF    03.5
00A3:  CLRF   08
00A4:  BCF    03.5
00A5:  CLRF   08
....................   
....................  while(TRUE) 
....................  {  
....................   
....................    output_high(pin_D3); 
00A6:  BSF    03.5
00A7:  BCF    08.3
00A8:  BCF    03.5
00A9:  BSF    08.3
....................    delay_ms(1000); 
00AA:  MOVLW  04
00AB:  MOVWF  2D
00AC:  MOVLW  FA
00AD:  MOVWF  2E
00AE:  CALL   004
00AF:  DECFSZ 2D,F
00B0:  GOTO   0AC
....................    output_low(pin_D3); 
00B1:  BSF    03.5
00B2:  BCF    08.3
00B3:  BCF    03.5
00B4:  BCF    08.3
....................    delay_ms(1000); 
00B5:  MOVLW  04
00B6:  MOVWF  2D
00B7:  MOVLW  FA
00B8:  MOVWF  2E
00B9:  CALL   004
00BA:  DECFSZ 2D,F
00BB:  GOTO   0B7
....................   
....................  delay_ms(50); 
00BC:  MOVLW  32
00BD:  MOVWF  2E
00BE:  CALL   004
....................  for(i=0;i<10;i++) 
00BF:  CLRF   2A
00C0:  MOVF   2A,W
00C1:  SUBLW  09
00C2:  BTFSS  03.0
00C3:  GOTO   0D9
....................    { 
....................           
....................          output_b(~binary_pattern[i]); 
00C4:  MOVLW  20
00C5:  ADDWF  2A,W
00C6:  MOVWF  04
00C7:  BCF    03.7
00C8:  MOVF   00,W
00C9:  XORLW  FF
00CA:  MOVWF  2D
00CB:  BSF    03.5
00CC:  CLRF   06
00CD:  BCF    03.5
00CE:  MOVF   2D,W
00CF:  MOVWF  06
....................          delay_ms(500);   
00D0:  MOVLW  02
00D1:  MOVWF  2D
00D2:  MOVLW  FA
00D3:  MOVWF  2E
00D4:  CALL   004
00D5:  DECFSZ 2D,F
00D6:  GOTO   0D2
....................          
....................         
....................          
....................    } 
00D7:  INCF   2A,F
00D8:  GOTO   0C0
....................    delay_ms(50); 
00D9:  MOVLW  32
00DA:  MOVWF  2E
00DB:  CALL   004
....................   for(i=0;i<10;i++) 
00DC:  CLRF   2A
00DD:  MOVF   2A,W
00DE:  SUBLW  09
00DF:  BTFSS  03.0
00E0:  GOTO   0F4
....................         { 
....................          
....................            IC_74hc595(~binary_pattern[i]);  
00E1:  MOVLW  20
00E2:  ADDWF  2A,W
00E3:  MOVWF  04
00E4:  BCF    03.7
00E5:  MOVF   00,W
00E6:  XORLW  FF
00E7:  MOVWF  2D
00E8:  MOVWF  2E
00E9:  GOTO   018
....................              IC_74HC595_Output(); 
00EA:  GOTO   047
....................              delay_ms(500);  
00EB:  MOVLW  02
00EC:  MOVWF  2D
00ED:  MOVLW  FA
00EE:  MOVWF  2E
00EF:  CALL   004
00F0:  DECFSZ 2D,F
00F1:  GOTO   0ED
....................         } 
00F2:  INCF   2A,F
00F3:  GOTO   0DD
....................             } 
00F4:  GOTO   0A6
....................      
....................    
....................          
....................          
....................          
.................... } 
00F5:  SLEEP

Configuration Fuses:
   Word  1: 3FF7   RC NOWDT NOPUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN LVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
